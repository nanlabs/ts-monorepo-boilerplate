Transform: AWS::SecretsManager-2020-07-23
Resources:
  RDSPostgresConnectionSecret:
    Type: AWS::SecretsManager::Secret
    Condition: CreateRDSPostgres
    Properties:
      Name: ${self:provider.stage}/${self:service}
      Description: RDS Cluster Connection Secret
      GenerateSecretString:
        SecretStringTemplate: '{ "username": "${self:custom.postgres.masterUsername}", "database": "${self:custom.postgres.database}" }'
        GenerateStringKey: password
        PasswordLength: 32
        ExcludePunctuation: true
      Tags:
        - Key: Name
          Value: ${self:provider.stage}/RDS

  RDSPostgresConnectionSecretTargetAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Condition: CreateRDSPostgres
    Properties:
      SecretId: !Ref RDSPostgresConnectionSecret
      TargetId: !Ref RDSPostgresInstance
      TargetType: AWS::RDS::DBInstance

  RDSPostgresConnectionSecretRotationSchedule:
    Type: AWS::SecretsManager::RotationSchedule
    Condition: CreateRDSPostgres
    DependsOn: RDSPostgresConnectionSecretTargetAttachment
    Properties:
      SecretId: !Ref RDSPostgresConnectionSecret
      HostedRotationLambda:
        RotationType: PostgreSQLSingleUser
        RotationLambdaName: PostgreSQLSingleUser
        VpcSecurityGroupIds: ${self:variables.values.VPCDefaultSecurityGroup}
        VpcSubnetIds:
          Fn::Join:
            - ","
            - - ${self:variables.values.PrivateSubnetOne}
              - ${self:variables.values.PrivateSubnetTwo}
      RotationRules:
        Duration: 2h
        ScheduleExpression: "cron(0 8 1 * ? *)"
